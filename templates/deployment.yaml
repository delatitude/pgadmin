apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ include "pgadmin.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "pgadmin.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "pgadmin.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "pgadmin.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}   
          env:
          - name: SERVER_MODE
            value: 'True'
          - name: PGADMIN_DEFAULT_USER
            valueFrom:
              configMapKeyRef:
                name: {{ include "pgadmin.fullname" . }}-configmap
                key: pgadmin-username
          - name: PGADMIN_DEFAULT_EMAIL
            valueFrom:
              configMapKeyRef:
                name: {{ include "pgadmin.fullname" . }}-configmap
                key: pgadmin-email
          - name: PGADMIN_DEFAULT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "pgadmin.fullname" . }}-secret
                key: pgadmin-password
          - name: CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ include "pgadmin.fullname" . }}-secret
                key: client-secret
          - name: PGADMIN_PORT
            value: "{{ .Values.service.port }}"          
          volumeMounts:
          - name: pv-pgadmin-data
            mountPath: /var/lib/pgadmin            
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: pv-pgadmin-data
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (printf "%s-acme" (include "pgadmin.fullname" .)) }}
        {{- else }}
          emptyDir: {}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
